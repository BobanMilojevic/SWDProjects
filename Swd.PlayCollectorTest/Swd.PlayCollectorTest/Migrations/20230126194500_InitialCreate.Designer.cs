// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Swd.PlayCollectorTest;

#nullable disable

namespace Swd.PlayCollectorTest.Migrations
{
    [DbContext(typeof(PlayCollectorContextTest))]
    [Migration("20230126194500_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Swd.PlayCollectorTest.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name of media item");

                    b.Property<int>("TypeOfDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_Media_Name");

                    b.HasIndex("TypeOfDocumentId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Swd.PlayCollectorTest.TypeOfDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("TypeName")
                        .HasDatabaseName("idx_TypeOfDocument_TypeName");

                    b.ToTable("TypeOfDocument");
                });

            modelBuilder.Entity("Swd.PlayCollectorTest.Media", b =>
                {
                    b.HasOne("Swd.PlayCollectorTest.TypeOfDocument", "TypeOfDocument")
                        .WithMany("MediaItems")
                        .HasForeignKey("TypeOfDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfDocument");
                });

            modelBuilder.Entity("Swd.PlayCollectorTest.TypeOfDocument", b =>
                {
                    b.Navigation("MediaItems");
                });
#pragma warning restore 612, 618
        }
    }
}
